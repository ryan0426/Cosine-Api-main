<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.globalyouth.cosineapi.dao.mapper.TbEnterpriseOfficeMapper">
  <resultMap id="BaseResultMap" type="cn.globalyouth.cosineapi.model.pojo.TbEnterpriseOffice">
    <!--@mbg.generated generated on Tue Jul 06 00:02:20 CST 2021.-->
    <!--@Table tb_enterprise_office-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="min_salary" jdbcType="INTEGER" property="minSalary" />
    <result column="max_salary" jdbcType="INTEGER" property="maxSalary" />
    <result column="salary_negotiable" jdbcType="BOOLEAN" property="salaryNegotiable" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="requirement" jdbcType="LONGVARCHAR" property="requirement" />
    <result column="demand" jdbcType="VARCHAR" property="demand" />
    <result column="can_online" jdbcType="BOOLEAN" property="canOnline" />
    <result column="online_url" jdbcType="VARCHAR" property="onlineUrl" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="job_number" jdbcType="INTEGER" property="jobNumber" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="ongoing" jdbcType="BOOLEAN" property="ongoing" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Tue Jul 06 00:02:20 CST 2021.-->
    id, company_id, title, nature, min_salary, max_salary, salary_negotiable, education, 
    description, requirement, demand, can_online, online_url, `location`, address, deadline, 
    job_number, note, ongoing, create_time, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated generated on Tue Jul 06 00:02:20 CST 2021.-->
    update tb_enterprise_office
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="company_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.companyId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.title,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="nature = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.nature,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="min_salary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.minSalary,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="max_salary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.maxSalary,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="salary_negotiable = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.salaryNegotiable,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="education = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.education,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.description,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="requirement = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.requirement,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="demand = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.demand,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="can_online = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.canOnline,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="online_url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.onlineUrl,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`location` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.location,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.address,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="deadline = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.deadline,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="job_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.jobNumber,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="note = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.note,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="ongoing = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.ongoing,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated generated on Tue Jul 06 00:02:20 CST 2021.-->
    update tb_enterprise_office
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="company_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.companyId != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.companyId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.title != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.title,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="nature = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.nature != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.nature,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="min_salary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.minSalary != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.minSalary,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="max_salary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.maxSalary != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.maxSalary,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="salary_negotiable = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.salaryNegotiable != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.salaryNegotiable,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="education = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.education != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.education,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.description != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.description,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="requirement = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.requirement != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.requirement,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="demand = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.demand != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.demand,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="can_online = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.canOnline != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.canOnline,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="online_url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.onlineUrl != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.onlineUrl,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`location` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.location != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.location,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.address != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.address,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="deadline = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.deadline != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.deadline,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="job_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.jobNumber != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.jobNumber,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="note = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.note != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.note,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="ongoing = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ongoing != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.ongoing,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated generated on Tue Jul 06 00:02:20 CST 2021.-->
    insert into tb_enterprise_office
    (id, company_id, title, nature, min_salary, max_salary, salary_negotiable, education, 
      description, requirement, demand, can_online, online_url, `location`, address, 
      deadline, job_number, note, ongoing, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.companyId,jdbcType=VARCHAR}, #{item.title,jdbcType=VARCHAR}, 
        #{item.nature,jdbcType=VARCHAR}, #{item.minSalary,jdbcType=INTEGER}, #{item.maxSalary,jdbcType=INTEGER}, 
        #{item.salaryNegotiable,jdbcType=BOOLEAN}, #{item.education,jdbcType=VARCHAR}, 
        #{item.description,jdbcType=LONGVARCHAR}, #{item.requirement,jdbcType=LONGVARCHAR}, 
        #{item.demand,jdbcType=VARCHAR}, #{item.canOnline,jdbcType=BOOLEAN}, #{item.onlineUrl,jdbcType=VARCHAR}, 
        #{item.location,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.deadline,jdbcType=TIMESTAMP}, 
        #{item.jobNumber,jdbcType=INTEGER}, #{item.note,jdbcType=VARCHAR}, #{item.ongoing,jdbcType=BOOLEAN}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="cn.globalyouth.cosineapi.model.pojo.TbEnterpriseOffice">
    <!--@mbg.generated generated on Tue Jul 06 00:02:20 CST 2021.-->
    insert into tb_enterprise_office
    (id, company_id, title, nature, min_salary, max_salary, salary_negotiable, education, 
      description, requirement, demand, can_online, online_url, `location`, address, 
      deadline, job_number, note, ongoing, create_time, update_time)
    values
    (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{nature,jdbcType=VARCHAR}, #{minSalary,jdbcType=INTEGER}, #{maxSalary,jdbcType=INTEGER}, 
      #{salaryNegotiable,jdbcType=BOOLEAN}, #{education,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, 
      #{requirement,jdbcType=LONGVARCHAR}, #{demand,jdbcType=VARCHAR}, #{canOnline,jdbcType=BOOLEAN}, 
      #{onlineUrl,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{deadline,jdbcType=TIMESTAMP}, #{jobNumber,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{ongoing,jdbcType=BOOLEAN}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
    on duplicate key update 
    id = #{id,jdbcType=VARCHAR}, 
    company_id = #{companyId,jdbcType=VARCHAR}, 
    title = #{title,jdbcType=VARCHAR}, 
    nature = #{nature,jdbcType=VARCHAR}, 
    min_salary = #{minSalary,jdbcType=INTEGER}, 
    max_salary = #{maxSalary,jdbcType=INTEGER}, 
    salary_negotiable = #{salaryNegotiable,jdbcType=BOOLEAN}, 
    education = #{education,jdbcType=VARCHAR}, 
    description = #{description,jdbcType=LONGVARCHAR}, 
    requirement = #{requirement,jdbcType=LONGVARCHAR}, 
    demand = #{demand,jdbcType=VARCHAR}, 
    can_online = #{canOnline,jdbcType=BOOLEAN}, 
    online_url = #{onlineUrl,jdbcType=VARCHAR}, 
    `location` = #{location,jdbcType=VARCHAR}, 
    address = #{address,jdbcType=VARCHAR}, 
    deadline = #{deadline,jdbcType=TIMESTAMP}, 
    job_number = #{jobNumber,jdbcType=INTEGER}, 
    note = #{note,jdbcType=VARCHAR}, 
    ongoing = #{ongoing,jdbcType=BOOLEAN}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="cn.globalyouth.cosineapi.model.pojo.TbEnterpriseOffice">
    <!--@mbg.generated generated on Tue Jul 06 00:02:20 CST 2021.-->
    insert into tb_enterprise_office
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="minSalary != null">
        min_salary,
      </if>
      <if test="maxSalary != null">
        max_salary,
      </if>
      <if test="salaryNegotiable != null">
        salary_negotiable,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="demand != null">
        demand,
      </if>
      <if test="canOnline != null">
        can_online,
      </if>
      <if test="onlineUrl != null">
        online_url,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="ongoing != null">
        ongoing,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="minSalary != null">
        #{minSalary,jdbcType=INTEGER},
      </if>
      <if test="maxSalary != null">
        #{maxSalary,jdbcType=INTEGER},
      </if>
      <if test="salaryNegotiable != null">
        #{salaryNegotiable,jdbcType=BOOLEAN},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=LONGVARCHAR},
      </if>
      <if test="demand != null">
        #{demand,jdbcType=VARCHAR},
      </if>
      <if test="canOnline != null">
        #{canOnline,jdbcType=BOOLEAN},
      </if>
      <if test="onlineUrl != null">
        #{onlineUrl,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="ongoing != null">
        #{ongoing,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        nature = #{nature,jdbcType=VARCHAR},
      </if>
      <if test="minSalary != null">
        min_salary = #{minSalary,jdbcType=INTEGER},
      </if>
      <if test="maxSalary != null">
        max_salary = #{maxSalary,jdbcType=INTEGER},
      </if>
      <if test="salaryNegotiable != null">
        salary_negotiable = #{salaryNegotiable,jdbcType=BOOLEAN},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=LONGVARCHAR},
      </if>
      <if test="demand != null">
        demand = #{demand,jdbcType=VARCHAR},
      </if>
      <if test="canOnline != null">
        can_online = #{canOnline,jdbcType=BOOLEAN},
      </if>
      <if test="onlineUrl != null">
        online_url = #{onlineUrl,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="ongoing != null">
        ongoing = #{ongoing,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>